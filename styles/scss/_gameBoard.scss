@keyframes flash {
    0% {
        background: white;
    }
    50% {
        background: blue;
    }
    100% {
        background: white;
    }
}

@keyframes munch {
    0% {
        clip-path: polygon(50% 50%, 150% 150%, 150% 150%, -50% 150%, -50% -50%, 150% -50%, 150% -50%);
    }
    50% {
        clip-path: polygon(50% 50%, 150% 50%, 150% 150%, -50% 150%, -50% -50%, 150% -50%, 150% 50%);
    }
    100% {
        clip-path: polygon(50% 50%, 150% 150%, 150% 150%, -50% 150%, -50% -50%, 150% -50%, 150% -50%);
    }
}

@keyframes fade {
    0% {
        opacity: 1;
    }
    75% {
        opacity: 1;
    }
    99% {
        opacity: 0;
    }
    100% {
        display: none;
        opacity: 0;
    }
}

$halfBorder: 1.5px;
$borderRadius: 50%;

.tile {
    width: 100%;
    padding-bottom: 100%;
    background: black;
    position: relative;
    &.food {
        &::before {
            content:'';
            background: white;
            position: absolute;
            width: 25%;
            height: 25%;
            border-radius: 50%;
            top: calc(50% - 25% / 2);
            left: calc(50% - 25% / 2);
        }
    }
    &.power {
        &::before {
            content:'';
            background: white;
            position: absolute;
            width: 60%;
            height: 60%;
            border-radius: 50%;
            top: calc(50% - 60% / 2);
            left: calc(50% - 60% / 2);
        }
    }
    &.wall {
        &.topLeftCorner, &.topRightCorner, &.bottomLeftCorner, &.bottomRightCorner {
            width: calc(50% + #{$halfBorder});
            padding-bottom: calc(50% - #{$halfBorder});
            border-color: blue;
            border-width: 2*$halfBorder;
        }
        
        &.topLeftCorner {
            margin: calc(50% - #{$halfBorder}) 0 0 calc(50% - #{$halfBorder});
            border-style: solid none none solid;
            border-radius: $borderRadius 0 0 0;
        }

        &.topRightCorner {
            margin: calc(50% - #{$halfBorder}) calc(50% - #{$halfBorder}) 0 0;
            border-style: solid solid none none;
            border-radius: 0 $borderRadius 0 0;
        }

        &.bottomRightCorner {
            border-style: none solid solid none;
            border-radius: 0 0 $borderRadius 0;
            margin: 0 calc(50% - #{$halfBorder}) calc(50% - #{$halfBorder}) 0;
        }

        &.bottomLeftCorner {
            border-style: none none solid solid;
            border-radius: 0 0 0 $borderRadius;
            margin: 0 0 calc(50% - #{$halfBorder}) calc(50% - #{$halfBorder});
        }

        &.horizontal, &.vertical {
            background: blue;
        }

        &.horizontal {
            height: 2*$halfBorder;
            padding: 0;
            margin: calc(50% - #{$halfBorder}) 0 calc(50% - #{$halfBorder}) 0;
        }

        &.vertical {
            width: 2*$halfBorder;
            padding: 0;
            margin: 0 calc(50% - #{$halfBorder}) 0 calc(50% - #{$halfBorder});
        }
    }
    &.door {
        &::after {
            content: '';
            position: absolute;
            left: 0;
            right: 0;
            top: calc(50% - #{$halfBorder});
            bottom: calc(50% - #{$halfBorder});
            background: hotpink;
        }
    }
}

.game {
    display: grid;
    position: relative;
    grid-template-columns: repeat(28, 1fr);
    width: calc((28 * 70vh / 31));
    max-width: calc(100vw - 2rem);
    margin: 0 auto;
    .messages {
        position: absolute;
        z-index: 20;
        left: 0;
        right: 0;
        top: 0;
        bottom: 0;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        color: white;
        font-size: 2rem;
        text-transform: uppercase;
        &.hide {
            display: none;
        }
    }
}

$eyeSize: 0.4vmin;
$minEyeSize: 0.1vmin;
$legHeight: 20%;
$legStep: 100% / 5;

@keyframes ghostWalk {
    0% {
        clip-path: polygon(100% 0, 0 0, 0 (100%-$legHeight), 0 100%, $legStep (100%-$legHeight), 2*$legStep 100%, 3*$legStep (100%-$legHeight), 4*$legStep 100%, 5*$legStep (100%-$legHeight), 5*$legStep (100%-$legHeight));
    }
    100% {
        clip-path: polygon(100% 0, 0 0, 0 (100%-$legHeight), 0 (100%-$legHeight), $legStep 100%, 2*$legStep (100%-$legHeight), 3*$legStep 100%, 4*$legStep (100%-$legHeight), 5*$legStep 100%, 5*$legStep (100%-$legHeight));
    }
}

.character {
    position: absolute;
    height: 10px;
    width: 10px;
    top: 0;
    left: 0;
    &.player {
        &::after {
            content: '';
            position: absolute;
            width: 100%;
            height: 100%;
            background: yellow;
            border-radius: 50%;
            transform: translateX(-50%) rotate(0deg);
            clip-path: polygon(50% 50%, 150% 150%, 150% 150%, -50% 150%, -50% -50%, 150% -50%, 150% -50%);
        }
        &.moving::after {
            animation: munch 0.3s linear infinite;
        }
        &.movingLeft::after {
            transform: translateX(-50%) rotate(180deg);
        }
        &.movingUp::after {
            transform: translateX(-50%) rotate(-90deg);
        }
        &.movingDown::after {
            transform: translateX(-50%) rotate(90deg);
        }
    }
    &.redGhost, &.orangeGhost, &.blueGhost, &.pinkGhost {
        border-radius: 50% 50% 0 0;
        clip-path: polygon(100% 0, 0 0, 0 (100%-$legHeight), 0 100%, $legStep (100%-$legHeight), 2*$legStep 100%, 3*$legStep (100%-$legHeight), 4*$legStep 100%, 5*$legStep (100%-$legHeight), 5*$legStep (100%-$legHeight));
        &.moving {
            animation: ghostWalk alternate linear 0.6s infinite;
        }
        &::after, &::before {
            content: '';
            position: absolute;
            width: 15%;
            height: 15%;
            background: black;
            border: white solid;
            border-width: $eyeSize;
            border-radius: 50%;
        }

        &.movingRight{
            &::before, &::after {
                border-width: $eyeSize $minEyeSize $eyeSize calc(2*#{$eyeSize} - #{$minEyeSize});
            }
        }

        &.movingLeft{
            &::before, &::after {
                border-width: $eyeSize calc(2*#{$eyeSize} - #{$minEyeSize}) $eyeSize $minEyeSize;
            }
        }

        &.movingUp{
            &::before, &::after {
                border-width: $minEyeSize $eyeSize calc(2*#{$eyeSize} - #{$minEyeSize}) $eyeSize;
            }
        }

        &.movingDown{
            &::before, &::after {
                border-width: calc(2*#{$eyeSize} - #{$minEyeSize}) $eyeSize $minEyeSize $eyeSize;
            }
        }

        &::after {
            top: 20%;
            left: 10%;
        }
        &::before {
            top: 20%;
            right: 10%;
        }
    }
    &.redGhost {
        background: red;
    }
    &.orangeGhost {
        background: orange;
    }
    &.blueGhost {
        background: cyan;
    }
    &.pinkGhost {
        background: pink;
    }
    &.afraid {
        background: blue;
        &.endWarning {
            animation: ghostWalk alternate linear 0.6s infinite, flash 0.5s steps(1) infinite;
        }
    }
    &.captured {
        background: transparent;
        animation: none;
    }
}


.fruit {
    position: absolute;
    transform: translateX(-50%) translateY(-50%);
    font-size: calc(1rem  + 1vmin);
}

.pointGain {
    position: absolute;
    transform: translateX(-50%) translateY(-50%);
    color: cyan;
    animation: fade linear 4s both;
    font-size: 0.8rem;
}

.lives .player {
    position: relative;
    width: 2rem;
    height: 2rem;
    margin-right: 0.2rem;
    display: inline-block;
    &::after {
        transform: none;
    }
}

.fruits {
    margin: 0;
    font-size: calc(1rem  + 1vmin);
}
